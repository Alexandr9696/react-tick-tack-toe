{"version":3,"sources":["components/Square/Square.js","components/Board/Board.js","components/Game/Game.js","helper.js","App.js","index.js"],"names":["Square","value","onClick","index","className","Board","squares","click","map","square","initialState","Array","fill","Game","React","useState","board","setBoard","xIsNext","setXIsNext","winner","lines","i","length","a","b","c","calculateWinner","boardCopy","App","ReactDOM","render","document","getElementById"],"mappings":"uUAWeA,EARA,SAAC,GAA6B,IAA5BC,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,QAASC,EAAW,EAAXA,MAC/B,OACE,wBAAQC,UAAU,SAASF,QAAS,kBAAMA,EAAQC,IAAlD,SACGF,KCUQI,EAZD,SAAC,GAAsB,IAArBC,EAAoB,EAApBA,QAASC,EAAW,EAAXA,MACvB,OACE,qBAAKH,UAAU,QAAf,SAEIE,EAAQE,KAAI,SAACC,EAAQN,GAAT,OACV,cAAC,EAAD,CAAoBF,MAAOQ,EAAQP,QAASK,EAAOJ,MAAOA,GAA7CA,SCJvB,IAAMO,EAAeC,MAAM,GAAGC,KAAK,MAmCpBC,EAjCF,WAAO,IAAD,EACSC,IAAMC,SAASL,GADxB,mBACVM,EADU,KACHC,EADG,OAEaH,IAAMC,UAAS,GAF5B,mBAEVG,EAFU,KAEDC,EAFC,KAGXC,ECVD,SAAyBX,GAW9B,IAVA,IAAMY,EAAQ,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEAC,EAAI,EAAGA,EAAID,EAAME,OAAQD,IAAK,CAAC,IAAD,cACnBD,EAAMC,GADa,GAC9BE,EAD8B,KAC3BC,EAD2B,KACxBC,EADwB,KAErC,GAAIjB,EAAOe,IAAMf,EAAOe,KAAOf,EAAOgB,IAAMhB,EAAOe,KAAOf,EAAOiB,GAC/D,OAAOjB,EAAOe,GAGlB,OAAO,KDPQG,CAAgBX,GAiB/B,OACE,sBAAKZ,UAAU,UAAf,UACE,wBAAQA,UAAU,aAAaF,QANd,WACnBe,EAASP,IAKP,uFACA,cAAC,EAAD,CAAOJ,QAASU,EAAOT,MAlBP,SAACJ,GACnB,IAAMyB,EAAS,YAAOZ,GAEtB,GAAII,GAAUQ,EAAUzB,GAAQ,OAAO,KAEvCyB,EAAUzB,GAASe,EAAU,IAAM,IAEnCD,EAASW,GACTT,GAAYD,MAWV,mBAAGd,UAAU,aAAb,SAEIgB,EAAS,gEAAgBA,EAAS,wEAAmBF,EAAU,IAAM,WErBhEW,MARf,WACE,OACE,qBAAKzB,UAAU,MAAf,SACE,cAAC,EAAD,OCFN0B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.156c1e69.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Square.css'\r\n\r\nconst Square = ({value, onClick, index}) => {\r\n  return (\r\n    <button className=\"square\" onClick={() => onClick(index)}>\r\n      {value}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Square;\r\n","import React from 'react';\r\nimport './Board.css'\r\nimport Square from \"../Square/Square\";\r\n\r\nconst Board = ({squares, click}) => {\r\n  return (\r\n    <div className=\"board\">\r\n      {\r\n        squares.map((square, index) => (\r\n          <Square key={index} value={square} onClick={click} index={index}/>\r\n        ))\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Board;\r\n","import React from 'react';\r\nimport './Game.css'\r\nimport Board from \"../Board/Board\";\r\nimport {calculateWinner} from \"../../helper\";\r\n\r\nconst initialState = Array(9).fill(null)\r\n\r\nconst Game = () => {\r\n  const [board, setBoard] = React.useState(initialState);\r\n  const [xIsNext, setXIsNext] = React.useState(true);\r\n  const winner = calculateWinner(board)\r\n\r\n  const handleClick = (index) => {\r\n    const boardCopy = [...board]\r\n    // определить был ли клик по ячейке или игра закончена\r\n    if (winner || boardCopy[index]) return null\r\n    // определить чей ход\r\n    boardCopy[index] = xIsNext ? 'X' : '0'\r\n    // Обновить стейт\r\n    setBoard(boardCopy)\r\n    setXIsNext(!xIsNext)\r\n  }\r\n\r\n  const startNewGame = () => {\r\n    setBoard(initialState)\r\n  }\r\n\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <button className=\"start__btn\" onClick={startNewGame}>Начать заново</button>\r\n      <Board squares={board} click={handleClick}/>\r\n      <p className=\"game__info\">\r\n        {\r\n          winner ? 'Победитель ' + winner : 'Сейчас ходит ' + (xIsNext ? 'X' : '0')\r\n        }\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Game;\r\n","export function calculateWinner(square) {\r\n  const lines = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6],\r\n  ]\r\n  for (let i = 0; i < lines.length; i++) {\r\n    const [a, b, c] = lines[i]\r\n    if (square[a] && square[a] === square[b] && square[a] === square[c]) {\r\n      return square[a]\r\n    }\r\n  }\r\n  return null\r\n}","import React from 'react'\nimport './App.css';\nimport Game from \"./components/Game/Game\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Game />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}